* {
    margin: 0;
    /* the star applied to everything on the page */
}

html, body {
    height: 100%;
}

body {
    font-family: Arial, Helvetica, sans-serif;
    background-color: grey;
}

p {
    margin: 0.5em 0 0.5 0; 
    /* up left down right */
}

header {
    display:block; 
    position: fixed;   
    /* it fixes the position of the navbar when we scrow */
    top: 0;
    left:0; 
    width:100%; 
    /* it uses the whole width of the screen */
    background-color: #a493c0;
    padding: 10px; 
}

nav a:visited, 
nav a:link {
    color: white;
    text-decoration: none; /* this is used to remove the underline from the link */

}

nav > ul {
    display:inline;
    padding: 0; 
}

nav > ul > li {
    display: inline-block ;
    /* this allows us to have control of the attributes of the different element
    in comparison with just display:inline */
    list-style: none;
    /* used for easiness for search engine. */
    margin: 0 5px 0 5px;
}

main {

    display: block;  
    background-image: url("images/background.png"); 
    padding-top: 3em; 
    padding-bottom: 3em;
    min-height: 85%;
}

footer {
padding: 15px;
/* space up and down */

}

aside, article {
    padding: 2em; 
}

aside {
    text-align: center;
    /* to center text/image in a container  */
}

article {
    width: 75%;
}

.columns{
    display:flex;
    /* everytime we want to have columns, we use flex in the global styles
    like we do here.  */
}

.columns-desktop {
    display:flex; 
}

/* Pies */
.pie {
    width: 200px ;
    padding: 10px;
    margin: 10px;
    background-color:#fff;
    border: solid 1px #ccc;
}

.pie img {
    width: 100% ;
}

.pie .title {
    font-weight: bold ;
}

.pie .columns {
    width:100%;
}

.pie .price {
    text-align: right;
}

.pie .columns div {
    width: 50%;
}

.pie button {
    background-color:pink;
    padding: 10px;
    border: solid 1px grey;
    border-radius: 3px;
    color: #fff;
}

/* adding styles which will only take affect in the desktop, not mobile */
@media only screen and (min-width: 768px){
main {
    display: flex; 
    /* this divides the content of the main in two columns as there ate two elements in main  */
}
aside {
    margin-left: 2% ;
}

}

